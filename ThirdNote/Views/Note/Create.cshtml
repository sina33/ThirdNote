@model ThirdNote.Models.Note
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*####################( Title )####################*@
        <div class="form-group row mb-3">
            <div class="col-10  ">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control dir-auto", type = "text", autofocus = "autofocus", placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @*####################( Text )####################*@
        <div class="form-group row mb-3">
            <div class="col-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control dir-auto", rows = 13 } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>
        @*####################( Tags )####################*@
        <div class="form-group row mb-3">
            <div class="col-md-10">
                <input type="text" class="form-control dir-auto" id="tagsInput" name="tagsInput" placeholder="Tags">
                @*<input class="ui-button dir-auto" data-role="tagsinput" id="tagsInput" name="tagsInput" placeholder="write comma-separated values ...">*@
                @*<input type="text" value="Amsterdam,Washington,Sydney,Beijing,Cairo" data-role="tagsinput" />*@
            </div>
        </div>
        @*####################( Extra & Save )####################*@
        <div class="form-group row mb-3 ">
            <div class="col-10">
                <div class="row justify-content-between">
                    @*###############( Extra Button )###############*@
                    <div class="col-2">
                        <a id="extraBtn" class="btn btn-secondary" onclick="toggleExtraOptionsFunction();">
                            Extra
                        </a>
                    </div>
                    @*###############( Date & Time )###############*@
                    <div id="DatePicker" class="col-4" style="display:none">
                        <div class="input-group col-2">
                            <div class="input-group-prepend">
                                <div class="input-group-text">Written Date</div>
                            </div>
                            @Html.TextBox("MyDate", DateTime.Now.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control small", type = "date" })

                            @*<input type="text" class="form-control" id="written_date" placeholder="Date">*@
                        </div>
                    </div>
                    <div id="TimePicker" class="col-4" style="display:none">
                        <div class="input-group col-2">
                            <div class="input-group-prepend">
                                <div class="input-group-text">&#64;</div>
                            </div>
                            @Html.TextBox("MyTime", DateTime.Now.ToString("hh:mm:ss"), htmlAttributes: new { @class = "form-control", type = "time" })
                            @*<input type="text" class="form-control" id="written_time" placeholder="Time">*@
                        </div>
                    </div>
                    @*###############( Save Button )###############*@
                    <div class="col-2">
                        <input type="submit" value="Save" class="btn btn-primary right">
                    </div>
                </div>
            </div>
        </div>
        @*####################( Collapsible )####################*@
        <div class="mb-3" id="collapseDiv">
            <div class="col-10">
                <div class="row justify-content-start">
                    @*##########( Markdown )##########*@
                    <div class="form-group col-2">
                        <div class="checkbox d-inline">
                            @Html.EditorFor(model => model.Markdown)
                            @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Markdown, htmlAttributes: new { @class = "control-label mx-2" })
                        @*<button type="button" class="btn btn-secondary">Secondary</button>*@
                    </div>
                    @*##########( Private )##########*@
                    <div class="form-group col-2">
                        <div class="checkbox d-inline">
                            @Html.EditorFor(model => model.Hidden)
                            @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "control-label mx-2" })
                    </div>
                    @*##########( Pin )##########*@
                    <div class="form-group col-2">
                        <div class="checkbox d-inline">
                            @Html.EditorFor(model => model.Pin)
                            @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label mx-2" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        function toggleExtraOptionsFunction() {
            var x = document.getElementById("DatePicker");
            var y = document.getElementById("TimePicker");
            var z = document.getElementById("collapseDiv");
            if (x.style.display === "none") {
                x.style.display = "flex";
                y.style.display = "flex";
                z.style.display = "block";
            } else {
                x.style.display = "none";
                y.style.display = "none";
                z.style.display = "none"; 
            }
        }
    </script>

    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/bootstrap-tagsinput.js"></script>
    @Scripts.Render("~/bundles/dir-auto")
}
