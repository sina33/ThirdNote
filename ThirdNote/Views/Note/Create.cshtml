@model ThirdNote.Models.Note

@{
    ViewBag.Title = "Note Create";
}

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            @*####################( Vertical Control Buttons )####################*@
            <div class="col-2 d-flex flex-column align-items-start">
                <p class="btn btn-warning btn-nav px-3" onclick="window.history.go(-1); return false;">Back</p>

                @*##########( Pin )##########*@
                <div id="Pin" class="form-group invisible align-self-auto mt-auto ms-4">
                    <div class="form-switch d-inline">
                        @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-check-input", role="switch" } })
                        @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "form-check-label mx-1 small" })
                </div>
                @*##########( Private )##########*@
                <div id="Private" class="form-group invisible align-self-stretch ms-4">
                    <div class="form-switch d-inline">
                        @Html.EditorFor(model => model.Hidden, new { htmlAttributes = new { @class = "form-check-input", role = "switch" } })
                        @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "form-check-label mx-1 small" })
                </div>
                @*##########( Markdown )##########*@
                <div id="Markdown" class="form-group invisible align-self-stretch ms-4 mb-3">
                    <div class="form-switch d-inline">
                        @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-check-input", role = "switch" } })
                        @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Markdown, htmlAttributes: new { @class = "form-check-label mx-1 small" })
                    @*<button type="button" class="btn btn-secondary">Secondary</button>*@
                </div>
                @*###############( Save Button )###############*@

                <div class="align-self-center">
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-success form-control px-4">
                    </div>
                </div>
            </div>
            @*####################( The Actual Note )####################*@
            <div class="col col-8">
                @*####################( Title )####################*@
                <div class="form-group row mb-3">
                    <div class="col">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control dir-auto", autofocus = "autofocus", placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*####################( Text )####################*@
                <div class="form-group row mb-3">
                    <div class="col">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control dir-auto", rows = 11 } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*####################( Tags )####################*@
                <div class="form-group row mb-3">
                    <div class="col">
                        <input type="text" class="form-control dir-auto" id="tagsInput" name="tagsInput" placeholder="Tags">
                        @*<input class="ui-button dir-auto" data-role="tagsinput" id="tagsInput" name="tagsInput" placeholder="write comma-separated values ...">*@
                        @*<input type="text" value="Amsterdam,Washington,Sydney,Beijing,Cairo" data-role="tagsinput" />*@
                    </div>
                </div>

                @*####################( Extra Button | Date & Time | Save Button )####################*@
                <div class="flex-row d-inline-flex flex-nowrap justify-content-between align-items-end col-10 animate__animated animate__bounce">
                    @*###############( Extra Button )###############*@
                    <div class="align-self-end">
                        <input id="extraBtn" class="btn btn-outline-primary" type="button" value="Extra" onclick="toggleExtraOptionsFunction();" />
                    </div>
                    @*###############( Date & Time )###############*@
                    <div id="DatePicker" class="invisible">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                <div class="input-group-text">Written Date</div>
                            </div>
                            @Html.TextBox("MyDate", DateTime.Now.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control float-end", type = "date" })
                        </div>
                    </div>
                    <div id="TimePicker" class="invisible">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                <div class="input-group-text"><small>&#64;</small></div>
                            </div>
                            @Html.TextBox("MyTime", DateTime.Now.ToString("HH:mm:ss"), htmlAttributes: new { @class = "form-control float-end", type = "time" })
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        function toggleExtraOptionsFunction() {
            $("#DatePicker").toggleClass("invisible");
            $("#TimePicker").toggleClass("invisible");
            $("#Markdown").toggleClass("invisible");
            $("#Private").toggleClass("invisible")
            $("#Pin").toggleClass("invisible");
            $("#extraBtn").toggleClass("active");
        }
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/dir-auto")
}
