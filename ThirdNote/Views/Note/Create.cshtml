@model ThirdNote.Models.Note

@{
    ViewBag.Title = "Note Create";
}

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="row">
            @*####################( Vertical Control Buttons )####################*@
            <div class="col-2 d-flex flex-column justify-content-between pb-3">
                <a class="btn btn-outline-warning btn-nav" href="/Note/Index">Dashboard</a>
                <p class="btn btn-outline-primary btn-nav" onclick="window.history.go(-1); return false;">Back</p>
            </div>
            @*####################( The Actual Note )####################*@
            <div class="col">
                @*####################( Title )####################*@
                <div class="form-group row mb-3">
                    <div class="col-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control dir-auto", autofocus = "autofocus", placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*####################( Text )####################*@
                <div class="form-group row mb-3">
                    <div class="col-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control dir-auto", rows = 12 } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*####################( Tags )####################*@
                <div class="form-group row mb-3">
                    <div class="col-10">
                        <input type="text" class="form-control dir-auto" id="tagsInput" name="tagsInput" placeholder="Tags">
                        @*<input class="ui-button dir-auto" data-role="tagsinput" id="tagsInput" name="tagsInput" placeholder="write comma-separated values ...">*@
                        @*<input type="text" value="Amsterdam,Washington,Sydney,Beijing,Cairo" data-role="tagsinput" />*@
                    </div>
                </div>
                @*####################( Extra & Date, Time & Save )####################*@
                <div class="row">
                    @*###############( Extra Button )###############*@
                    <div class="col-1">
                                <a id="extraBtn" class="btn btn-secondary" onclick="toggleExtraOptionsFunction();">
                                    Extra
                                </a>
                            </div>
                    @*###############( Date & Time )###############*@
                    <div id="DatePicker" class="col-4">
                                <div class="input-group col-2">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">Written Date</div>
                                    </div>
                                    @Html.TextBox("MyDate", DateTime.Now.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control small", type = "date" })
                                </div>
                            </div>
                    <div id="TimePicker" class="col-3 pb-3">
                                <div class="input-group col-2">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">&#64;</div>
                                    </div>
                                    @Html.TextBox("MyTime", DateTime.Now.ToString("HH:mm:ss"), htmlAttributes: new { @class = "form-control", type = "time" })
                                </div>
                            </div>
                    @*###############( Save Button )###############*@
                    <div class="col-2">
                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-success form-control">
                        </div>
                    </div>
                </div>
            </div>
            @*####################( Collapsible )####################*@
            <div class="row" id="collapseDiv">
                <div class="col-2"></div>
                @*##########( Markdown )##########*@
                <div class="form-group col-2">
                    <div class="checkbox d-inline">
                        @Html.EditorFor(model => model.Markdown)
                        @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Markdown, htmlAttributes: new { @class = "control-label mx-2" })
                    @*<button type="button" class="btn btn-secondary">Secondary</button>*@
                </div>
                @*##########( Private )##########*@
                <div class="form-group col-2">
                    <div class="checkbox d-inline">
                        @Html.EditorFor(model => model.Hidden)
                        @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "control-label mx-2" })
                </div>
                @*##########( Pin )##########*@
                <div class="form-group col-2">
                    <div class="checkbox d-inline">
                        @Html.EditorFor(model => model.Pin)
                        @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label mx-2" })
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        function toggleExtraOptionsFunction() {
            var x = document.getElementById("DatePicker");
            var y = document.getElementById("TimePicker");
            var z = document.getElementById("collapseDiv");
            if (z.style.display === "none") {
                z.style.display = "inherit";
            } else {
                z.style.display = "none";
            }
        }
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/dir-auto")
}
