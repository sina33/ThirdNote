@model ThirdNote.Models.Note
@{ IEnumerable<ThirdNote.Models.Tag> oTag = ViewBag.tags as IEnumerable<ThirdNote.Models.Tag>; }
@{ IEnumerable<ThirdNote.Models.Note> oNote = ViewBag.ParentNotes as IEnumerable<ThirdNote.Models.Note>; }
@{
    ViewBag.Title = "Details";
}


<div class="row">
    @*####################( Vertical Control Buttons )####################*@
    <div class="col-2 offset-1 d-flex flex-column justify-content-between">
        <a class="btn btn-outline-warning btn-nav" href="/Note/Edit/@Model.Id">Edit</a>
        <p class="btn btn-outline-primary btn-nav disabled" onclick="window.history.go(-1); return false;">Back To List</p>
    </div>

    @*####################(  Form )####################*@
    <div class="col-6 mb-2">
        @*###############( Parent Notes )###############*@
        @if (ViewBag.ParentNotes != null)
        {
            <div class="mb-3">
                @foreach (ThirdNote.Models.Note parentNote in ViewBag.ParentNotes)
                {
                    <p class="small"><code>Reference: </code><a href="/Note/Details/@parentNote.Id"><span class="badge bg-light text-dark">@parentNote.Title</span></a></p>
                }
            </div>
        }
        <dl>
            <dt></dt>
            @*###############( Title & Date )###############*@
            <dd>
                <div class="dir-txt-auto">
                    @Html.Raw("<b>" + Model.Title + "</b>")
                    <br />
                    <small dir="ltr">
                        @{ string days = (DateTime.Now - Model.WrittenDate).Duration().Days.ToString(); }
                        <b>@days days</b> ago at
                        @Html.DisplayFor(model => model.WrittenDate)
                    </small>
                    <br />
                </div>
            </dd>
            @*###############( Text )###############*@
            <dd>
                <br />
                <div class="dir-txt-auto">
                    @if (Model.Markdown)
                    {
                        @Html.Raw(Model.Text);
                    }
                    else
                    {
                        //Html.Raw(string.Join("", Model.Text.Split('\n').Select(p => HttpUtility.HtmlEncode(p) + "<br />")));
                        if (!string.IsNullOrEmpty(Model.Text))
                        {
                            foreach (var txt in Model.Text.Split('\n'))
                            {
                                @Html.Raw(HttpUtility.HtmlEncode(txt));
                                @Html.Raw("<br />");
                            }
                        }
                    }
                </div>
            </dd>
            @*###############( Tags )###############*@
            <dd>
                <div class="d-flex flex-row flex-wrap justify-content-start dir-txt-auto pt-2">
                    @foreach (var tag in ViewBag.tags)
                    {
                        <a class="mx-2" href="\Tag\Details\@tag.ID">@tag.Lable_fa</a>
                    }
                </div>
            </dd>
        </dl>
        @*###############( Child Notes )###############*@
        @if (ViewBag.Children != null)
        {
            <div class="mt-3">
                @foreach (ThirdNote.Models.Note child in ViewBag.Children)
                {
                    <p class="small"><code>Cited in: </code><a href="/Note/Details/@child.Id" class=""><span class="badge bg-light text-dark">@child.Title</span></a></p>
                }
            </div>
        }
    </div>
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dir-auto")
}
