@model ThirdNote.Models.Note

@{
    ViewBag.Title = "Note Edit";
}

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.ViewCount)

    <div class="row">
        @*####################( Vertical Control Buttons )####################*@
        <div class="col-3 d-flex flex-column align-items-start">
            @*##########( Back Button )##########*@
            <p class="btn btn-link link-dark" onclick="window.history.go(-1); return false;"><i class="fa fa-arrow-square-left fa-2x fa-fw"></i></p>
            @*###############( Date & Time )###############*@
            <div id="DatePicker" class="mb-2 mt-auto font-monospace form-control-sm">
                <div class="input-group input-group-sm">
                    <div class="input-group-prepend">
                        <div class="input-group-text"><i class="fa fa-calendar fa-fw"></i></div>
                    </div>
                    @Html.TextBox("MyDate", Model.WrittenDate.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "form-control float-end small", type = "date" })
                </div>
            </div>
            <div id="TimePicker" class="mb-2 font-monospace form-control-sm">
                <div class="input-group input-group-sm">
                    <div class="input-group-prepend">
                        <div class="input-group-text"><small><i class="fa fa-clock fa-fw"></i></small></div>
                        @*<div class="input-group-text"><small>&#64;</small></div>*@
                    </div>
                    @Html.TextBox("MyTime", Model.WrittenDate.ToString("HH:mm"), htmlAttributes: new { @class = "form-control float-end", type = "time" })
                </div>
            </div>

            <div>
                @*##########( Markdown )##########*@
                <div id="Markdown" class="form-group form-control-sm mb-2">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <svg style="width: 20px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path d="M593.8 59.1H46.2C20.7 59.1 0 79.8 0 105.2v301.5c0 25.5 20.7 46.2 46.2 46.2h547.7c25.5 0 46.2-20.7 46.1-46.1V105.2c0-25.4-20.7-46.1-46.2-46.1zM338.5 360.6H277v-120l-61.5 76.9-61.5-76.9v120H92.3V151.4h61.5l61.5 76.9 61.5-76.9h61.5v209.2zm135.3 3.1L381.5 256H443V151.4h61.5V256H566z" /></svg>
                            </div>
                        </div>
                        <div class="form-switch d-inline my-auto ms-3">
                            @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-check-input", role = "switch" } })
                            @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @*##########( Pin )##########*@
                <div id="Pin" class="form-group form-control-sm mb-2">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <div class="input-group-text"><i class="fa fa-thumb-tack fa-fw"></i></div>
                        </div>
                        <div class="form-switch d-inline my-auto ms-3">
                            @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-check-input", role = "switch" } })
                            @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @*##########( Private )##########*@
                <div id="Private" class="form-group form-control-sm mb-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            <div class="input-group-text"><i class="fa fa-lock fa-fw"></i></div>
                        </div>
                        <div class="form-switch d-inline my-auto ms-3">
                            @Html.EditorFor(model => model.Hidden, new { htmlAttributes = new { @class = "form-check-input", role = "switch" } })
                            @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*###############( Extra Button )###############*@
            <p id="extraBtn" class="btn btn-link link-dark mb-3" onclick="toggleExtraOptionsFunction();"><i class="fa fa-circle-plus fa-2x fa-fw"></i></p>
            @*###############( Save Button )###############*@
            <button type="submit" class="btn btn-link link-dark mb-3" style="box-shadow:none;">
                <i class="fa fa-save fa-2x fa-fw"></i>
            </button>
        </div>
        @*####################( The Actual Note )####################*@
        <div class="col col-8 shadow-sm">
            @*####################( Title )####################*@
            <div class="form-group row mb-3">
                <div class="col">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @id = "Title", @class = "form-control dir-auto shadow-none border-0 border-bottom border-light", autofocus = "autofocus" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            @*####################( Text )####################*@
            <div class="form-group row mb-3">
                <div class="col">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @id="Text", @class = "form-control dir-auto shadow-none border-0 border-bottom border-light", rows = 13 } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
            @*####################( Tags )####################*@
            <div class="form-group row mb-3">
                <div class="col">
                    <input type="text" class="form-control dir-auto shadow-none border-bottom border-light" id="tagsInput" name="tagsInput" value="@ViewBag.tagString">
                </div>
            </div>
        </div>
    </div>
</div>
}



@section Scripts {
    <script type="text/javascript">
        function toggleExtraOptionsFunction() {
            $("#DatePicker").toggleClass("invisible");
            $("#TimePicker").toggleClass("invisible");
            $("#Markdown").toggleClass("invisible");
            $("#Private").toggleClass("invisible")
            $("#Pin").toggleClass("invisible");
            $("#extraBtn").toggleClass("active");
            $("#extraBtn").find('i').toggleClass("fa-circle-plus").toggleClass("fa-circle-xmark");
        }
        $(document).ready(function () {
            var input = $("#Title");
            var len = input.val().length;
            input[0].focus();
            input[0].setSelectionRange(len, len);
        })
    </script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dir-auto")
}
